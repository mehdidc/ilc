!obj:pylearn2.train.Train {
    dataset: &train !obj:ilc.ILC {
         name: "images"
    },

      model: !obj:pylearn2.models.autoencoder.DenoisingAutoencoder {
        nvis : 9720,
        nhid : 500,
        irange : 0.01,
        corruptor: !obj:pylearn2.corruption.SaltPepperCorruptor {
            corruption_level: .0,
        },
        act_enc: "tanh",
        act_dec: "sigmoid",    # Linear activation on the decoder side.
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate : 1e-4,
        batch_size : 100,
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.AdaDelta {},
        monitoring_batches : 10,
        monitoring_dataset : *train,
        termination_criterion: !obj:pylearn2.termination_criteria.And {
            criteria: [
                !obj:pylearn2.termination_criteria.MonitorBased {
                    channel_name: "objective",
                    prop_decrease: 0.,
                    N: 10
                },
                !obj:pylearn2.termination_criteria.EpochCounter {
                    max_epochs: 1000
                }
            ]
        },
        cost: !obj:pylearn2.costs.cost.SumOfCosts {
            costs: [
                !obj:pylearn2.costs.autoencoder.MeanBinaryCrossEntropy {},
               # !obj:pylearn2.costs.autoencoder.SparseActivation {
               #     coeff: 0.8,
               #     p: 0.0001,
               # },
            ]
        }
    },

    save_path: "dae.pkl",
    save_freq: 1
}
