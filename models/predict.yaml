!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.ilc.ILC {
        name : 'images_predict_angle',
        which_set : 'train'
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [ !obj:pylearn2.models.mlp.RectifiedLinear {
                     layer_name: 'h0',
                     dim: 100,
                     irange: 0.05,
                 }, !obj:pylearn2.models.mlp.LinearGaussian {
                     dim: 2,
                     layer_name: 'y',
                     irange: 0.005,
                     min_beta: -1,
                     beta_lr_scale: 1.,
                     max_beta: 1.,
                     init_beta: 1.,
                 }
                ],
        nvis: 9720,
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 100,
        learning_rate: .01,
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:pylearn2.datasets.ilc.ILC {
                            name: 'images_predict_angle',
                            which_set : 'valid'
                          },
                'test'  : !obj:pylearn2.datasets.ilc.ILC {
                            name: 'images_predict_angle',
                            which_set : 'test'
                          }
            },
        cost: !obj:pylearn2.costs.cost.SumOfCosts { costs: [
            !obj:pylearn2.costs.mlp.Default {
            }, !obj:pylearn2.costs.mlp.WeightDecay {
                coeffs: [ .00005, .00005 ]
            }
            ]
        },
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
            init_momentum: .5
        },
        termination_criterion: !obj:pylearn2.termination_criteria.And {
            criteria: [
                !obj:pylearn2.termination_criteria.MonitorBased {
                    channel_name: "valid_y_mse",
                    prop_decrease: 0.00001,
                    N: 10
                },
                !obj:pylearn2.termination_criteria.EpochCounter {
                    max_epochs: 100
                }
            ]
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_mse',
             save_path: "predict.pkl"
        }, 
        !obj:pylearn2.training_algorithms.learning_rule.MomentumAdjustor {
            start: 1,
            saturate: 10,
            final_momentum: .99
        }
    ]
}
