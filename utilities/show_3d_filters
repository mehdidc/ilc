#!/usr/bin/env python
import numpy as np
import sys
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from skimage.filter import threshold_otsu

def show_3d(params):
    hb, vb, W, Wprime = params
    dataset = W.T
    w, h, l = 18, 18, 30

    fig = plt.figure()
    nb = 16
    for i in xrange(nb):
        ind = np.random.randint(0, dataset.shape[0] - 1)
        example = dataset[ind]
        example = example.reshape( (l, h, w) ) 
        example = (example - example.min()) / (example.max() - example.min())
        thres = threshold_otsu(example)
        example = 1.*(example <= thres)
        ax = fig.add_subplot(4, 4, i + 1, projection='3d', alpha=1.)
        X, Y, Z = [], [], []
        E= []
        for z in xrange(l):
            for y in xrange(h):
                for x in xrange(w):
                    if example[z, y, x] >0:
                        X.append(x)
                        Z.append(y)
                        Y.append(z)
                        E.append(example[z, y, x])

        ax.scatter(X, Z, Y, c=E, marker='o', cmap='winter')
        ax.set_xticks(range(0, w)) 
        ax.set_yticks(range(0, l))
        ax.set_zticks(range(0, h))
        ax.set_xlim((0, w))
        ax.set_ylim((0, l))
        ax.set_zlim((0, h))
        ax.set_xlabel("x")
        ax.set_ylabel("z")
        ax.set_zlabel("y")
    plt.show()

if __name__ == "__main__":

    import cPickle as pickle
    model = pickle.load(open(sys.argv[1]))
    params = model.get_params()
    params = map(lambda x:x.get_value(), params)
    show_3d(params)
